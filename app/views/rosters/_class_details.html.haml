-# - students = course.students.uniq
- students = course.rosters.select {|r| not (r.start_date.nil? or r.end_date.nil?) and Date.today <= r.end_date}.map {|r| r.enrollment.student}
- pending_students = course.rosters.select {|r| (r.start_date.nil? or r.end_date.nil?)}.map {|r| r.enrollment.student}

%tr
  %td
    .dropdown
      %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
        %span
          = course.name
        %span.caret
      %ul.dropdown-menu{:role => "menu", "aria-labelledby" => "dropdownMenu"}
        -# %li
        -#   %a.menu-item-add-student{:href => "/rosters/add?course_id=#{course.id}&program_id=#{@program_id}", :tabindex => "-1"}
        -#     Add a student
        %li
          %a.menu-item-update-class{:href => "/courses/#{course.id}/edit?program_id=#{@program_id}", :tabindex => "-1"}
            Update class
        %li
          %a.menu-item-delete-class{:href => "/courses/#{course.id}", :tabindex => "-1"}
            Delete class
%tr
  %td{:data => {:courseid => course.id}}
    %select.roster-class-students{:id => "students-course-#{course.id}", :multiple => "multiple"}
      - @enrollments.each do |enrollment|
        - student = enrollment.student
        - if students.include? student
          %option{:selected => "selected", :value => enrollment.id}
            = student.name
        - elsif pending_students.include? student
          %option.pending{:selected => "selected", :value => enrollment.id}
            = student.name
        - else
          %option.pending{:value => enrollment.id}
            = student.name
-#   %td
-#     - if students.count == 0
-#       %span.empty-class
-#         empty
-#     - else
-#       %span.student-name
-#         = students[0].name
-# - unless students.empty?
-#   - students[1..-1].each do |student|
-#     %tr
-#       %td
-#         %span.student-name
-#           = student.name
